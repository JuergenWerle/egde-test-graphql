{"remainingRequest":"C:\\Users\\werle\\Documents\\projects\\deuba\\vision2018\\edge-graphql\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!C:\\Users\\werle\\Documents\\projects\\deuba\\vision2018\\edge-graphql\\node_modules\\source-map-loader\\index.js??ref--0!C:\\Users\\werle\\Documents\\projects\\deuba\\vision2018\\edge-graphql\\src\\modules\\Env.js","dependencies":[{"path":"C:\\Users\\werle\\Documents\\projects\\deuba\\vision2018\\edge-graphql\\src\\modules\\Env.js","mtime":1518763482341},{"path":"C:\\Users\\werle\\Documents\\projects\\deuba\\vision2018\\edge-graphql\\.babelrc","mtime":1518763481095},{"path":"C:\\Users\\werle\\Documents\\projects\\deuba\\vision2018\\edge-graphql\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1510929699000},{"path":"C:\\Users\\werle\\Documents\\projects\\deuba\\vision2018\\edge-graphql\\node_modules\\babel-loader\\lib\\index.js","mtime":1503096278000},{"path":"C:\\Users\\werle\\Documents\\projects\\deuba\\vision2018\\edge-graphql\\node_modules\\source-map-loader\\index.js","mtime":1508771232000}],"contextDependencies":[],"result":["\"use strict\";exports.__esModule=true;exports.getEnv=getEnv;exports.setEnv=setEnv;exports.envReducer=envReducer;const SET_ENV=exports.SET_ENV=\"env/SET\";/**\n * Selector for accessing the env values from inside the global state.\n *\n * @param {state} state Global Redux state.\n */function getEnv(state){return state.env;}/**\n * Action creator for setting the env values.\n *\n * @param {number} value New values to set for the env.\n */function setEnv(value){return{type:SET_ENV,value};}const initialState={};/**\n * Reducer for all env relevant action types.\n *\n * @param previousState Previous state object of this reducer.\n * @param {string} action Action to process.\n */function envReducer(previousState=initialState,action){switch(action.type){case SET_ENV:return Object.assign({},previousState,action.value);default:return previousState;}}",{"version":3,"sources":["src\\modules\\Env.js"],"names":["getEnv","setEnv","envReducer","SET_ENV","state","env","value","type","initialState","previousState","action"],"mappings":"6CAOgBA,M,CAAAA,M,SASAC,M,CAAAA,M,SAYAC,U,CAAAA,U,CA5BT,KAAMC,yBAAU,SAAhB,CAEP;;;;GAKO,QAASH,OAAT,CAAgBI,KAAhB,CAAuB,CAC5B,MAAOA,OAAMC,GAAb,CACD,CAED;;;;GAKO,QAASJ,OAAT,CAAgBK,KAAhB,CAAuB,CAC5B,MAAO,CAAEC,KAAMJ,OAAR,CAAiBG,KAAjB,CAAP,CACD,CAED,KAAME,cAAe,EAArB,CAEA;;;;;GAMO,QAASN,WAAT,CAAoBO,cAAgBD,YAApC,CAAkDE,MAAlD,CAA0D,CAC/D,OAAQA,OAAOH,IAAf,EACE,IAAKJ,QAAL,CACE,wBAAYM,aAAZ,CAA8BC,OAAOJ,KAArC,EAEF,QACE,MAAOG,cAAP,CALJ,CAOD","file":"Env.js","sourceRoot":"C:/Users/werle/Documents/projects/deuba/vision2018/edge-graphql","sourcesContent":["export const SET_ENV = \"env/SET\"\n\n/**\n * Selector for accessing the env values from inside the global state.\n *\n * @param {state} state Global Redux state.\n */\nexport function getEnv(state) {\n  return state.env\n}\n\n/**\n * Action creator for setting the env values.\n *\n * @param {number} value New values to set for the env.\n */\nexport function setEnv(value) {\n  return { type: SET_ENV, value }\n}\n\nconst initialState = {}\n\n/**\n * Reducer for all env relevant action types.\n *\n * @param previousState Previous state object of this reducer.\n * @param {string} action Action to process.\n */\nexport function envReducer(previousState = initialState, action) {\n  switch (action.type) {\n    case SET_ENV:\n      return { ...previousState, ...action.value }\n\n    default:\n      return previousState\n  }\n}\n"]}]}