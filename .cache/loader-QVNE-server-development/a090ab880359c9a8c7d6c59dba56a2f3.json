{"remainingRequest":"C:\\Users\\werle\\Documents\\projects\\deuba\\vision2018\\edge-graphql\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!C:\\Users\\werle\\Documents\\projects\\deuba\\vision2018\\edge-graphql\\node_modules\\source-map-loader\\index.js??ref--0!C:\\Users\\werle\\Documents\\projects\\deuba\\vision2018\\edge-graphql\\src\\State.js","dependencies":[{"path":"C:\\Users\\werle\\Documents\\projects\\deuba\\vision2018\\edge-graphql\\src\\State.js","mtime":1518764104042},{"path":"C:\\Users\\werle\\Documents\\projects\\deuba\\vision2018\\edge-graphql\\.babelrc","mtime":1518763481095},{"path":"C:\\Users\\werle\\Documents\\projects\\deuba\\vision2018\\edge-graphql\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1510929699000},{"path":"C:\\Users\\werle\\Documents\\projects\\deuba\\vision2018\\edge-graphql\\node_modules\\babel-loader\\lib\\index.js","mtime":1503096278000},{"path":"C:\\Users\\werle\\Documents\\projects\\deuba\\vision2018\\edge-graphql\\node_modules\\source-map-loader\\index.js","mtime":1508771232000}],"contextDependencies":[],"result":["\"use strict\";exports.__esModule=true;var _Counter=require(\"./modules/Counter\");var _Env=require(\"./modules/Env\");exports[\"default\"]={/**\n   * Returns configuration objects for different areas of the Edge\n   * powered application infrastructure.\n   *\n   * @param state {Object} Current application state.\n   * @param topic {String} Any of \"apollo\", ...\n   */getConfig(state,topic){if(topic===\"apollo\"){return{uri:state.env.APOLLO_URL// headers: {},\n// batchRequests: false,\n// trustNetwork: true,\n// queryDeduplication: true\n};}return null;},/**\n   * Return map of routes. Match redux actions to urls.\n   */getRoutes(){return{HOME:\"/\",COUNTER:\"/counter\",LOCALIZATION:\"/localization\",GRAPHQL:\"/graphql\"};},/**\n   * Return list of Redux store enhancers to use.\n   */getEnhancers(){return[];},/**\n   * Create mapping of reducers to use for the Redux store.\n   */getReducers(){return{counter:_Counter.counterReducer,env:_Env.envReducer};},/**\n   * Create list of Redux middleware to use.\n   */getMiddlewares(){return[];}};",{"version":3,"sources":["src\\State.js"],"names":["getConfig","state","topic","uri","env","APOLLO_URL","getRoutes","HOME","COUNTER","LOCALIZATION","GRAPHQL","getEnhancers","getReducers","counter","getMiddlewares"],"mappings":"qCAAA,0CACA,kC,mBAEe,CACb;;;;;;KAOAA,UAAUC,KAAV,CAAiBC,KAAjB,CAAwB,CACtB,GAAIA,QAAU,QAAd,CAAwB,CACtB,MAAO,CACLC,IAAKF,MAAMG,GAAN,CAAUC,UAEf;AACA;AACA;AACA;AANK,CAAP,CAQD,CAED,MAAO,KAAP,CACD,CArBY,CAuBb;;KAGAC,WAAY,CACV,MAAO,CACLC,KAAM,GADD,CAELC,QAAS,UAFJ,CAGLC,aAAc,eAHT,CAILC,QAAS,UAJJ,CAAP,CAMD,CAjCY,CAmCb;;KAGAC,cAAe,CACb,MAAO,EAAP,CACD,CAxCY,CA0Cb;;KAGAC,aAAc,CACZ,MAAO,CACLC,+BADK,CAELT,mBAFK,CAAP,CAID,CAlDY,CAoDb;;KAGAU,gBAAiB,CACf,MAAO,EAAP,CACD,CAzDY,C","file":"State.js","sourceRoot":"C:/Users/werle/Documents/projects/deuba/vision2018/edge-graphql","sourcesContent":["import { counterReducer } from \"./modules/Counter\"\nimport { envReducer } from \"./modules/Env\"\n\nexport default {\n  /**\n   * Returns configuration objects for different areas of the Edge\n   * powered application infrastructure.\n   *\n   * @param state {Object} Current application state.\n   * @param topic {String} Any of \"apollo\", ...\n   */\n  getConfig(state, topic) {\n    if (topic === \"apollo\") {\n      return {\n        uri: state.env.APOLLO_URL\n\n        // headers: {},\n        // batchRequests: false,\n        // trustNetwork: true,\n        // queryDeduplication: true\n      }\n    }\n\n    return null\n  },\n\n  /**\n   * Return map of routes. Match redux actions to urls.\n   */\n  getRoutes() {\n    return {\n      HOME: \"/\",\n      COUNTER: \"/counter\",\n      LOCALIZATION: \"/localization\",\n      GRAPHQL: \"/graphql\"\n    }\n  },\n\n  /**\n   * Return list of Redux store enhancers to use.\n   */\n  getEnhancers() {\n    return []\n  },\n\n  /**\n   * Create mapping of reducers to use for the Redux store.\n   */\n  getReducers() {\n    return {\n      counter: counterReducer,\n      env: envReducer\n    }\n  },\n\n  /**\n   * Create list of Redux middleware to use.\n   */\n  getMiddlewares() {\n    return []\n  }\n}\n"]}]}